function checkrot(vec)

if ((nargin==1) && ischar(vec))
    action=vec;
else
    action='initialize';
end;
switch action
    case 'initialize',
        oldFigNumber=watchon;
        
%         callbackStr='checkrot(''keypres'')';
        figNumber=figure( ...
            'Name','Rotation tests', ...
            'Color', [.7 .7 .7], ...
            'NumberTitle','off', ...
            'DoubleBuffer', 'on', ...
            'Position',[100,100,750,600],...
            'Visible','off');
        
        axh=axes( ...
            'Units','normalized', ...
            'Color', [.8 .8 .8], ...
            'Position',[0.05 0.05 0.75 0.9], ...
            'Visible','on');
        
        %===================================
        % Information for all buttons
        labelColor=[0.7 0.7 0.7];
        top=0.95;
        bottom=0.05;
        
        yInitLabelPos=0.99;
        left=0.825;
        
        labelWid=0.015;
        labelHt=0.02;
        inpWid=0.15;
        inpHt=0.05;
        
        
        btnWid=0.15;
        btnHt=0.05;
        
        sldHt=.25;
        sldWid=.01;
        
        sldY=.5;
        sldX=left+0.015;
        
        
        labelY=sldY+sldHt+.01;
        
        labelX=sldX-.007;
        
        lbw1=.05;
        lbh1=.024;
        
        lbx1=sldX-.025;
        lby1=sldY-lbh1-0.01;
        
        lbspc=.01;
        
        sldspc=0.06;
        espc=0.03;
        
        sldofs=-.4;
        
        
        % Spacing between the label and the button for the same command
        btnOffset=0.003;
        % Spacing between the button and the next command's label
        spacing=0.05;
        %====================================
        % The CONSOLE frame
        frmBorder=0.02;
        yPos=0.05-frmBorder;
        frmPos=[left-frmBorder yPos btnWid+2*frmBorder 0.9+2*frmBorder];
        h=uicontrol( ...
            'Style','frame', ...
            'Units','normalized', ...
            'Position',frmPos);
        %====================================
        yLabelPos=yInitLabelPos;
        
        % inpu tfield
        labelPos=[left yLabelPos-2*inpHt inpWid inpHt];
        uicontrol( ...
            'Style','text', ...
            'Units','normalized', ...
            'Position',labelPos, ...
            'HorizontalAlignment','center', ...
            'String','Num.Rand.Moments.');
        yLabelPos=yLabelPos-2*labelHt-spacing;
        
        labelPos=[left yLabelPos-1*inpHt inpWid inpHt];
        callbackStr='checkrot(''gen_vec'')';
        numinp=uicontrol( ...
            'Style','edit', ...
            'Units','normalized', ...
            'Position',labelPos, ...
            'HorizontalAlignment','center', ...
            'String','0',...
            'call',callbackStr);
        yLabelPos=yLabelPos-2*labelHt-spacing;
        
        Pos=[labelX labelY+2*labelHt labelWid*9 labelHt];
        
        uicontrol( ...
            'Style','text', ...
            'Units','normalized', ...
            'Position',Pos, ...
            'BackgroundColor',labelColor, ...
            'HorizontalAlignment','left', ...
            'String','rot_angle, axis: (0,0)');
        
        
        % theta1 label + slider
        Pos=[labelX labelY labelWid labelHt];
        uicontrol( ...
            'Style','text', ...
            'Units','normalized', ...
            'Position',Pos, ...
            'BackgroundColor',labelColor, ...
            'HorizontalAlignment','left', ...
            'String','Q');
        Pos=[sldX sldY sldWid sldHt];
        callbackStr='checkrot(''change_ang'')';
        QH1=uicontrol( ...
            'Style','slider', ...
            'Units','normalized', ...
            'Position',Pos,...
            'Min',0,...
            'Max',1,...
            'call',callbackStr);
        
        Pos=[lbx1 lby1 lbw1 lbh1];
        lbQ1h=uicontrol( ...
            'Style','text', ...
            'Units','normalized', ...
            'Position',Pos, ...
            'BackgroundColor',labelColor, ...
            'HorizontalAlignment','center', ...
            'String',get(QH1,'Value'));
        
        
        
        % Phi1 label + slider
        Pos=[labelX+sldspc labelY labelWid labelHt];
        uicontrol( ...
            'Style','text', ...
            'Units','normalized', ...
            'Position',Pos, ...
            'BackgroundColor',labelColor, ...
            'HorizontalAlignment','left', ...
            'String','F');
        Pos=[sldX+sldspc sldY sldWid sldHt];
        callbackStr='checkrot(''change_ang'')';
        FH1=uicontrol( ...
            'Style','slider', ...
            'Units','normalized', ...
            'Position',Pos,...
            'Min',-1,...
            'Max',1,...
            'Value',0,...
            'call',callbackStr);
        
        Pos=[lbx1+sldspc lby1 lbw1 lbh1];
        lbF1h=uicontrol( ...
            'Style','text', ...
            'Units','normalized', ...
            'Position',Pos, ...
            'BackgroundColor',labelColor, ...
            'HorizontalAlignment','center', ...
            'String',get(FH1,'Value'));
        
        % Xi1 label + slider
        Pos=[labelX+2*sldspc labelY labelWid labelHt];
        uicontrol( ...
            'Style','text', ...
            'Units','normalized', ...
            'Position',Pos, ...
            'BackgroundColor',labelColor, ...
            'HorizontalAlignment','left', ...
            'String','Xi');
        Pos=[sldX+2*sldspc sldY sldWid sldHt];
        callbackStr='checkrot(''change_ang'')';
        XH1=uicontrol( ...
            'Style','slider', ...
            'Units','normalized', ...
            'Position',Pos,...
            'Min',-1,...
            'Max',1,...
            'Value',0,...
            'call',callbackStr);
        
        Pos=[lbx1+2*sldspc lby1 lbw1 lbh1];
        lbX1h=uicontrol( ...
            'Style','text', ...
            'Units','normalized', ...
            'Position',Pos, ...
            'BackgroundColor',labelColor, ...
            'HorizontalAlignment','center', ...
            'String',get(XH1,'Value'));
        
        Pos=[labelX labelY+2*labelHt+sldofs labelWid*9 labelHt];
        
        uicontrol( ...
            'Style','text', ...
            'Units','normalized', ...
            'Position',Pos, ...
            'BackgroundColor',labelColor, ...
            'HorizontalAlignment','left', ...
            'String','2nd rot. at rot_angle');
        
        
        % theta2 label + slider
        Pos=[labelX labelY+sldofs labelWid labelHt];
        uicontrol( ...
            'Style','text', ...
            'Units','normalized', ...
            'Position',Pos, ...
            'BackgroundColor',labelColor, ...
            'HorizontalAlignment','left', ...
            'String','Q');
        Pos=[sldX sldY+sldofs sldWid sldHt];
        callbackStr='checkrot(''change_ang'')';
        QH2=uicontrol( ...
            'Style','slider', ...
            'Units','normalized', ...
            'Position',Pos,...
            'Min',0,...
            'Max',1,...
            'call',callbackStr);
        
        Pos=[lbx1 lby1+sldofs lbw1 lbh1];
        lbQ2h=uicontrol( ...
            'Style','text', ...
            'Units','normalized', ...
            'Position',Pos, ...
            'BackgroundColor',labelColor, ...
            'HorizontalAlignment','center', ...
            'String',get(QH2,'Value'));
        
        
        
        % Phi2 label + slider
        Pos=[labelX+sldspc labelY+sldofs labelWid labelHt];
        uicontrol( ...
            'Style','text', ...
            'Units','normalized', ...
            'Position',Pos, ...
            'BackgroundColor',labelColor, ...
            'HorizontalAlignment','left', ...
            'String','F');
        Pos=[sldX+sldspc sldY+sldofs sldWid sldHt];
        callbackStr='checkrot(''change_ang'')';
        FH2=uicontrol( ...
            'Style','slider', ...
            'Units','normalized', ...
            'Position',Pos,...
            'Min',-1,...
            'Max',1,...
            'Value',0,...
            'call',callbackStr);
        
        Pos=[lbx1+sldspc lby1+sldofs lbw1 lbh1];
        lbF2h=uicontrol( ...
            'Style','text', ...
            'Units','normalized', ...
            'Position',Pos, ...
            'BackgroundColor',labelColor, ...
            'HorizontalAlignment','center', ...
            'String',get(FH2,'Value'));
        
        % Xi2 label + slider
        Pos=[labelX+2*sldspc labelY+sldofs labelWid labelHt];
        uicontrol( ...
            'Style','text', ...
            'Units','normalized', ...
            'Position',Pos, ...
            'BackgroundColor',labelColor, ...
            'HorizontalAlignment','left', ...
            'String','Xi');
        Pos=[sldX+2*sldspc sldY+sldofs sldWid sldHt];
        callbackStr='checkrot(''change_ang'')';
        XH2=uicontrol( ...
            'Style','slider', ...
            'Units','normalized', ...
            'Position',Pos,...
            'Min',-1,...
            'Max',1,...
            'Value',0,...
            'call',callbackStr);
        
        Pos=[lbx1+2*sldspc lby1+sldofs lbw1 lbh1];
        lbX2h=uicontrol( ...
            'Style','text', ...
            'Units','normalized', ...
            'Position',Pos, ...
            'BackgroundColor',labelColor, ...
            'HorizontalAlignment','center', ...
            'String',get(XH2,'Value'));
        
        
        
        % Uncover the figure
        HNDL=[numinp,axh,QH1,FH1,XH1,lbQ1h,lbF1h,lbX1h,QH2,FH2,XH2,lbQ2h,lbF2h,lbX2h];
        par.hndl=HNDL;
        if(nargin<1)
            par.nv=1;
            par.vec=[0;0];
        else
            sz=size(vec);
            if (sz(1)~=2 && sz(2)~=2)
                disp('wrong vector');
                return
            end;
            if (sz(1)~=2), vec=vec.'; end;
            par.nv=size(vec,2);
            par.vec=vec;
        end;
        par.ang=[0,0];
        par.dang=[0,0];
        set(numinp,'string',par.nv);
        set(axh,'view',[50,30])
        set(figNumber,'Visible','on', ...
            'UserData',par);
        
        watchoff(oldFigNumber);
        figure(figNumber);
        checkrot('draw');
        uicontrol(numinp);
    case 'change_ang',
        %         par=get(gcf, 'UserData');
        %         set(gcf,'Userdata',par);
        checkrot('draw');
        
    case 'gen_vec',
        par=get(gcf, 'UserData');
        inph=par.hndl(1);
        nv=str2num(get(inph,'string'));
        disp(nv);
        if (~isempty(nv))
            scl=0.05;
            set(inph,'string',nv);
            par.vec=[rand(1,nv)*pi*scl;(rand(1,nv)*2-1)*pi];
            par.nv=nv;
            set(gcf,'Userdata',par);
            checkrot('draw');
        else
            set(inph,'string',0);
        end;
        
    case 'draw',
        par=get(gcf, 'UserData');
        axh=par.hndl(2);
        v1=get(axh,'view');
        axes(axh);
        cla;
        hold on;
                
        QH1=par.hndl(3);
        FH1=par.hndl(4);
        XH1=par.hndl(5);
        LQH1=par.hndl(6);
        LFH1=par.hndl(7);
        LXH1=par.hndl(8);
        
        QH2=par.hndl(9);
        FH2=par.hndl(10);
        XH2=par.hndl(11);
        LQH2=par.hndl(12);
        LFH2=par.hndl(13);
        LXH2=par.hndl(14);
        
        par.ang=[get(QH1,'Value'),get(FH1,'Value'),get(XH1,'Value')];
        par.dang=[get(QH2,'Value'),get(FH2,'Value'),get(XH2,'Value')];
        
        
        set(LQH1,'String',num2str(par.ang(1),4));
        set(LFH1,'String',num2str(par.ang(2),4));
        set(LXH1,'String',num2str(par.ang(3),4));
        
        set(LQH2,'String',num2str(par.dang(1),4));
        set(LFH2,'String',num2str(par.dang(2),4));
        set(LXH2,'String',num2str(par.dang(3),4));
        
        
        plot3([0,1],[0,0],[0,0],[0,0],[0,0],[0,1],[0,0],[0,1],[0,0]);
        text(1,0,0,'Z');
        text(0,0,1,'Y');
        text(0,1,0,'X');
        if (par.nv>0)
            nv=par.nv;
            a_ang=10;
            a_ratios=[0.1,0.1];
            angle=par.ang*pi;
            dangle=par.dang*pi;
            for ii=1:nv
                base=par.vec(:,ii)*pi;
                v=rots(base,angle,[0,0]);
                
                 v=rots(v,dangle,angle(1:2));
                
                theta=v(1);
                phi=v(2);
                p1=[cos(theta),sin(theta)*cos(phi),sin(theta)*sin(phi)];
                hnd=arrow3d([0,0,0],p1,a_ang,'cylinder',a_ratios);
            end;
        end;
        hold off;
        grid on;
        axis equal;
        xlim([-1,1]);
        ylim([-1,1]);
        zlim([-1,1]);
        set(axh,'view',v1);
        rotate3d on;
        
end;    % if strcmp(action, ...

function v=rots(veci,rotang,ax)

if ( max(abs(ax))>1e-10)
    f=ax(2)+pi;
    
    rf=[ax(1),f,0];
    vec=rots(veci,rf,[0,0]);
%     disp(ax);
else
    vec=veci;
end

%   phi0=vec(2);
%   xi=rotang(3);
%   phi=atan2(cos(xi)*sin(phi0) - cos(phi0)*sin(xi),cos(phi0)*cos(xi) + sin(phi0)*sin(xi));
%   phi1=rotang(2);
%   phi2=atan2(cos(phi1)*sin(phi) - cos(phi)*sin(phi1),cos(phi)*cos(phi1) + sin(phi)*sin(phi1));
%   rth=rotang(1);
%   bth=vec(1);
%   v (1) = acos (cos(bth)*cos(rth)-cos(phi2)*sin(bth)*sin(rth));
%   v (2) = atan2 (sin(bth)*sin(phi2),cos(phi2)*cos(rth)*sin(bth)+cos(bth)*sin(rth));
%   phi1=-rotang(2);
%   phi=v(2);
%   v(2)=atan2(cos(phi1)*sin(phi) - cos(phi)*sin(phi1),cos(phi)*cos(phi1) + sin(phi)*sin(phi1));


v(1)=real(acos(cos(rotang(1))*cos(vec(1)) - cos(rotang(2) - rotang(3) - vec(2))*sin(rotang(1))*sin(vec(1))));
f1=-(sin(vec(1))*sin(rotang(2) - rotang(3) - vec(2)));
f2=cos(vec(1))*sin(rotang(1)) + cos(rotang(1))*cos(rotang(2) - rotang(3) - vec(2))*sin(vec(1));
qq=rotang(2)+atan2(f1,f2);

v(2)=real(atan2(sin(qq), cos(qq)));


if ( max(abs(ax))>1e-10)
    rf=[ax(1),ax(2),0];
    v=rots(v,rf,[0,0]);
end


return


function [v]=macrospin(vec)
% for i=1:size(vec
%
% end;
return


